name: Publish Release Package

on:
  release:
    types: [published]

env:
  DOTNET_VERSIONS: |
    8.0.x
    9.0.x
  NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: List directory structure
      run: |
        echo "Current directory:"
        pwd
        echo "Directory contents:"
        ls -la
        echo "Src directory contents:"
        ls -la src
        echo "ShowsOnSale.World directory contents:"
        ls -la src/ShowsOnSale.World

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSIONS }}

    - name: Check .NET SDK
      run: |
        echo "Dotnet version:"
        dotnet --version
        echo "Dotnet info:"
        dotnet --info
        echo "Dotnet location:"
        which dotnet

    - name: Get version
      id: get_version
      run: |
        # Get the tag from the release
        VERSION=${GITHUB_REF#refs/tags/}
        # Remove 'v' prefix if it exists
        VERSION=${VERSION#v}
        echo "VERSION=${VERSION}" >> $GITHUB_ENV

    - name: Build and pack
      run: |
        dotnet build --project src/ShowsOnSale.World/ShowsOnSale.World.csproj --configuration Release
        dotnet pack --project src/ShowsOnSale.World/ShowsOnSale.World.csproj --configuration Release --no-build -p:Version=${{ env.VERSION }}

    - name: Push to NuGet
      run: |
        dotnet nuget push "src/ShowsOnSale.World/bin/Release/ShowsOnSale.World.${{ env.VERSION }}.nupkg" --api-key ${{ env.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate 